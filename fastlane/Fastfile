# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

screenshot_devices = [
    "iPhone 11 Pro Max",
    "iPhone 8 Plus",
    "iPad Pro (12.9-inch) (2nd generation)",
    "iPad Pro (12.9-inch) (4th generation)"
]

test_devices = [
    "iPhone SE (2nd generation) (14.5)",
    "iPhone 8 (15.2)",
    #"iPhone 8 Plus",
    "iPad Pro (12.9-inch) (2nd generation) (14.5)",
    "iPad Pro (12.9-inch) (4th generation) (15.2)"
]

platform :ios do
  desc "Run tests on multiple devices"
  lane :tests do
    run_tests(
        scheme: "PainMedsBuddy",
        devices: test_devices,
        code_coverage: true,
        open_report: true,
        skip_build: false,
        include_simulator_logs: false,
        #suppress_xcode_output: true,
        ensure_devices_found: true,
        reset_simulator: true,
        number_of_retries: 3,
        skip_detect_devices: true,
        #test_without_building: true,
        fail_build: false, # If tests fail the build will be failed later based on the result_bundle
        output_types: '', # Don't generate reports, they be generated from the result_bundle
        output_style: 'raw', # Disable xcpretty
        xcargs: '-quiet', # Prevent xcodebuild from spewing output (only shows warnings and errors) now that xcpretty is disabled.
        result_bundle: true # Needed so that a following tool can generate reports/fail the build
    )

    slather(
      html: true,
      output_directory: "fastlane/test_output/slather-output", 
      scheme: "PainMedsBuddy",
      proj: "PainMedsBuddy.xcodeproj",
      verbose: true,
      show: true,
      ignore: [
        '../../Library/*',
        '../Library/Developer/*',
        '~/**/DerivedData/*'
      ]
    )

    sh("cp -r /Users/jm/repos/PainMedsBuddy/fastlane/test_output/slather-output/ /Users/jm/repos/web/static/pmb/slather")
  end

  desc "Generate test coverage using Slather"
  lane :SlatherLane do
    slather(
      html: true,
      output_directory: "fastlane/test_output/slatherOutput", 
      scheme: "PainMedsBuddy",
      proj: "PainMedsBuddy.xcodeproj",
      verbose: true,
      show: true,
      ignore: [
        '../../Library/*',
        '../Library/Developer/*',
        '~/**/DerivedData/*'
      ]
    )

    sh("cp -r /Users/jm/repos/PainMedsBuddy/fastlane/test_output/slather-output/ /Users/jm/repos/web/static/pmb/slather")
  end

  desc "A - Generate new localized screenshots"
  lane :screenshots do
    scan(
        scheme: "FastlaneScreenshots", 
        derived_data_path: 'fastlane/derived_data_path',
        build_for_testing: true,
        configuration: "Debug",
        devices: screenshot_devices,
    )

    snapshot(
        devices: screenshot_devices,
        languages: [
            "en-GB",
        ],
        scheme: "FastlaneScreenshots",
        launch_arguments: ["enable-ui-testing"],
        stop_after_first_error: false, 
        number_of_retries: 0,
        dark_mode: true,
        output_simulator_logs: true,
        erase_simulator: false,
        clear_previous_screenshots: true,
        concurrent_simulators: true,
        test_without_building: true, # need to remove when not using ci
        derived_data_path: 'fastlane/derived_data_path'
    )
  end

  desc "B - Frame localized screenshots"
  lane :framescreens do
    frame_screenshots(
      white: false,
      path: "/Users/jm/repos/PainMedsBuddy/fastlane/screenshots"
    )
  end

  desc "C - Upload localized + framed screenshots"
  lane :UploadScreens do
    deliver(
      submit_for_review: false,
      force: true,
      skip_binary_upload: true, 
      skip_app_version_update: true,
      overwrite_screenshots: true,
      skip_metadata: true,
      skip_screenshots: false
    )
  end

  desc "* - Generate, Frame and Upload"
  lane :allscreens do
    screenshots
    framescreens
    UploadScreens
  end

  desc "Upload localized meta data"
  lane :upmeta do
    deliver(
      submit_for_review: false,
      skip_binary_upload: true, 
      skip_app_version_update: true, 
      skip_screenshots: true
    )
  end

end
